package deawio.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class StoreModelExample {
  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  protected String orderByClause;

  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  protected boolean distinct;

  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  protected List<Criteria> oredCriteria;

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  public StoreModelExample() {
    oredCriteria = new ArrayList<Criteria>();
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  public void setDistinct(boolean distinct) {
    this.distinct = distinct;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  public boolean isDistinct() {
    return distinct;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  public List<Criteria> getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  public Criteria or() {
    Criteria criteria = createCriteriaInternal();
    oredCriteria.add(criteria);
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  public void clear() {
    oredCriteria.clear();
    orderByClause = null;
    distinct = false;
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  protected abstract static class GeneratedCriteria {
    protected List<Criterion> criteria;

    protected GeneratedCriteria() {
      super();
      criteria = new ArrayList<Criterion>();
    }

    public boolean isValid() {
      return criteria.size() > 0;
    }

    public List<Criterion> getAllCriteria() {
      return criteria;
    }

    public List<Criterion> getCriteria() {
      return criteria;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteria.add(new Criterion(condition));
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value));
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value1, value2));
    }

    public Criteria andStoreIdIsNull() {
      addCriterion("store_id is null");
      return (Criteria) this;
    }

    public Criteria andStoreIdIsNotNull() {
      addCriterion("store_id is not null");
      return (Criteria) this;
    }

    public Criteria andStoreIdEqualTo(Integer value) {
      addCriterion("store_id =", value, "storeId");
      return (Criteria) this;
    }

    public Criteria andStoreIdNotEqualTo(Integer value) {
      addCriterion("store_id <>", value, "storeId");
      return (Criteria) this;
    }

    public Criteria andStoreIdGreaterThan(Integer value) {
      addCriterion("store_id >", value, "storeId");
      return (Criteria) this;
    }

    public Criteria andStoreIdGreaterThanOrEqualTo(Integer value) {
      addCriterion("store_id >=", value, "storeId");
      return (Criteria) this;
    }

    public Criteria andStoreIdLessThan(Integer value) {
      addCriterion("store_id <", value, "storeId");
      return (Criteria) this;
    }

    public Criteria andStoreIdLessThanOrEqualTo(Integer value) {
      addCriterion("store_id <=", value, "storeId");
      return (Criteria) this;
    }

    public Criteria andStoreIdIn(List<Integer> values) {
      addCriterion("store_id in", values, "storeId");
      return (Criteria) this;
    }

    public Criteria andStoreIdNotIn(List<Integer> values) {
      addCriterion("store_id not in", values, "storeId");
      return (Criteria) this;
    }

    public Criteria andStoreIdBetween(Integer value1, Integer value2) {
      addCriterion("store_id between", value1, value2, "storeId");
      return (Criteria) this;
    }

    public Criteria andStoreIdNotBetween(Integer value1, Integer value2) {
      addCriterion("store_id not between", value1, value2, "storeId");
      return (Criteria) this;
    }

    public Criteria andCreatedIsNull() {
      addCriterion("created is null");
      return (Criteria) this;
    }

    public Criteria andCreatedIsNotNull() {
      addCriterion("created is not null");
      return (Criteria) this;
    }

    public Criteria andCreatedEqualTo(Date value) {
      addCriterion("created =", value, "created");
      return (Criteria) this;
    }

    public Criteria andCreatedNotEqualTo(Date value) {
      addCriterion("created <>", value, "created");
      return (Criteria) this;
    }

    public Criteria andCreatedGreaterThan(Date value) {
      addCriterion("created >", value, "created");
      return (Criteria) this;
    }

    public Criteria andCreatedGreaterThanOrEqualTo(Date value) {
      addCriterion("created >=", value, "created");
      return (Criteria) this;
    }

    public Criteria andCreatedLessThan(Date value) {
      addCriterion("created <", value, "created");
      return (Criteria) this;
    }

    public Criteria andCreatedLessThanOrEqualTo(Date value) {
      addCriterion("created <=", value, "created");
      return (Criteria) this;
    }

    public Criteria andCreatedIn(List<Date> values) {
      addCriterion("created in", values, "created");
      return (Criteria) this;
    }

    public Criteria andCreatedNotIn(List<Date> values) {
      addCriterion("created not in", values, "created");
      return (Criteria) this;
    }

    public Criteria andCreatedBetween(Date value1, Date value2) {
      addCriterion("created between", value1, value2, "created");
      return (Criteria) this;
    }

    public Criteria andCreatedNotBetween(Date value1, Date value2) {
      addCriterion("created not between", value1, value2, "created");
      return (Criteria) this;
    }

    public Criteria andModifiedIsNull() {
      addCriterion("modified is null");
      return (Criteria) this;
    }

    public Criteria andModifiedIsNotNull() {
      addCriterion("modified is not null");
      return (Criteria) this;
    }

    public Criteria andModifiedEqualTo(Date value) {
      addCriterion("modified =", value, "modified");
      return (Criteria) this;
    }

    public Criteria andModifiedNotEqualTo(Date value) {
      addCriterion("modified <>", value, "modified");
      return (Criteria) this;
    }

    public Criteria andModifiedGreaterThan(Date value) {
      addCriterion("modified >", value, "modified");
      return (Criteria) this;
    }

    public Criteria andModifiedGreaterThanOrEqualTo(Date value) {
      addCriterion("modified >=", value, "modified");
      return (Criteria) this;
    }

    public Criteria andModifiedLessThan(Date value) {
      addCriterion("modified <", value, "modified");
      return (Criteria) this;
    }

    public Criteria andModifiedLessThanOrEqualTo(Date value) {
      addCriterion("modified <=", value, "modified");
      return (Criteria) this;
    }

    public Criteria andModifiedIn(List<Date> values) {
      addCriterion("modified in", values, "modified");
      return (Criteria) this;
    }

    public Criteria andModifiedNotIn(List<Date> values) {
      addCriterion("modified not in", values, "modified");
      return (Criteria) this;
    }

    public Criteria andModifiedBetween(Date value1, Date value2) {
      addCriterion("modified between", value1, value2, "modified");
      return (Criteria) this;
    }

    public Criteria andModifiedNotBetween(Date value1, Date value2) {
      addCriterion("modified not between", value1, value2, "modified");
      return (Criteria) this;
    }

    public Criteria andNameIsNull() {
      addCriterion("name is null");
      return (Criteria) this;
    }

    public Criteria andNameIsNotNull() {
      addCriterion("name is not null");
      return (Criteria) this;
    }

    public Criteria andNameEqualTo(String value) {
      addCriterion("name =", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameNotEqualTo(String value) {
      addCriterion("name <>", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameGreaterThan(String value) {
      addCriterion("name >", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameGreaterThanOrEqualTo(String value) {
      addCriterion("name >=", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameLessThan(String value) {
      addCriterion("name <", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameLessThanOrEqualTo(String value) {
      addCriterion("name <=", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameLike(String value) {
      addCriterion("name like", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameNotLike(String value) {
      addCriterion("name not like", value, "name");
      return (Criteria) this;
    }

    public Criteria andNameIn(List<String> values) {
      addCriterion("name in", values, "name");
      return (Criteria) this;
    }

    public Criteria andNameNotIn(List<String> values) {
      addCriterion("name not in", values, "name");
      return (Criteria) this;
    }

    public Criteria andNameBetween(String value1, String value2) {
      addCriterion("name between", value1, value2, "name");
      return (Criteria) this;
    }

    public Criteria andNameNotBetween(String value1, String value2) {
      addCriterion("name not between", value1, value2, "name");
      return (Criteria) this;
    }

    public Criteria andCurrencyIsNull() {
      addCriterion("currency is null");
      return (Criteria) this;
    }

    public Criteria andCurrencyIsNotNull() {
      addCriterion("currency is not null");
      return (Criteria) this;
    }

    public Criteria andCurrencyEqualTo(String value) {
      addCriterion("currency =", value, "currency");
      return (Criteria) this;
    }

    public Criteria andCurrencyNotEqualTo(String value) {
      addCriterion("currency <>", value, "currency");
      return (Criteria) this;
    }

    public Criteria andCurrencyGreaterThan(String value) {
      addCriterion("currency >", value, "currency");
      return (Criteria) this;
    }

    public Criteria andCurrencyGreaterThanOrEqualTo(String value) {
      addCriterion("currency >=", value, "currency");
      return (Criteria) this;
    }

    public Criteria andCurrencyLessThan(String value) {
      addCriterion("currency <", value, "currency");
      return (Criteria) this;
    }

    public Criteria andCurrencyLessThanOrEqualTo(String value) {
      addCriterion("currency <=", value, "currency");
      return (Criteria) this;
    }

    public Criteria andCurrencyLike(String value) {
      addCriterion("currency like", value, "currency");
      return (Criteria) this;
    }

    public Criteria andCurrencyNotLike(String value) {
      addCriterion("currency not like", value, "currency");
      return (Criteria) this;
    }

    public Criteria andCurrencyIn(List<String> values) {
      addCriterion("currency in", values, "currency");
      return (Criteria) this;
    }

    public Criteria andCurrencyNotIn(List<String> values) {
      addCriterion("currency not in", values, "currency");
      return (Criteria) this;
    }

    public Criteria andCurrencyBetween(String value1, String value2) {
      addCriterion("currency between", value1, value2, "currency");
      return (Criteria) this;
    }

    public Criteria andCurrencyNotBetween(String value1, String value2) {
      addCriterion("currency not between", value1, value2, "currency");
      return (Criteria) this;
    }
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table
   * store
   *
   * @mbg.generated do_not_delete_during_merge Wed Jan 24 21:36:03 GMT 2018
   */
  public static class Criteria extends GeneratedCriteria {

    protected Criteria() {
      super();
    }
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table
   * store
   *
   * @mbg.generated Wed Jan 24 21:36:03 GMT 2018
   */
  public static class Criterion {
    private String condition;

    private Object value;

    private Object secondValue;

    private boolean noValue;

    private boolean singleValue;

    private boolean betweenValue;

    private boolean listValue;

    private String typeHandler;

    public String getCondition() {
      return condition;
    }

    public Object getValue() {
      return value;
    }

    public Object getSecondValue() {
      return secondValue;
    }

    public boolean isNoValue() {
      return noValue;
    }

    public boolean isSingleValue() {
      return singleValue;
    }

    public boolean isBetweenValue() {
      return betweenValue;
    }

    public boolean isListValue() {
      return listValue;
    }

    public String getTypeHandler() {
      return typeHandler;
    }

    protected Criterion(String condition) {
      super();
      this.condition = condition;
      this.typeHandler = null;
      this.noValue = true;
    }

    protected Criterion(String condition, Object value, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.typeHandler = typeHandler;
      if (value instanceof List<?>) {
        this.listValue = true;
      } else {
        this.singleValue = true;
      }
    }

    protected Criterion(String condition, Object value) {
      this(condition, value, null);
    }

    protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.secondValue = secondValue;
      this.typeHandler = typeHandler;
      this.betweenValue = true;
    }

    protected Criterion(String condition, Object value, Object secondValue) {
      this(condition, value, secondValue, null);
    }
  }
}
